This is what a sorting algorithm looks like. And today I'm gonna make them race against each other. I want to find out who's the best, who's the fastest, who's the smartest. Welcome to the Sorting algorithm Olympics, where 12 sorting algorithms are gonna face each other for a chance to win the gold Algorithm sorting Olympic medal. Hold on, that just sounds weird. Let me try that again. The 2024 Sorting Olympic Gold medal. Yeah, let's go. But first of all, what is even a sorting algorithm? Well, it just, like, sorts stuff. Imagine you have this really messy data over here. You hand it to the sorting algorithm, the algorithm does its magic, and boom, you have this super tidy, super perfect data. Wow. And why are they useful, you might ask? They just look cool, I guess. Like, look at this. It's pretty. It's pretty cool. My university says that they're important for job interviews and stuff. Nah, just kidding. Not about the interview stuff. They do actually ask questions about sorting algorithms in interviews. But besides that, sorting algorithms are quite a big deal in computer science. They are important for search engines, operating systems, databases, and all sorts of other cool stuff. Like, imagine having to sort this list of numbers manually. It would take a long time, right? Or would it let. When it says 47, 12, 75, 17. This goes here. This goes 32. Okay, done. Oh, wait, wait, no. Now I'm done. Okay, I'm feeling pretty good about my time. Like, it's not that bad. Let's see how much the sorting algorithm takes. Shit, that's fast. Okay, yeah, I get it. The sorting algorithm is, like, way faster. So now that we have established that sorting algorithms are basically the rulers of the entire universe, let's build one. So far, I feel good. I have managed to draw these two rectangles on the screen. Let's go. Oh, okay. It's upside down now for some reason. Great. Now I can't even see it. Wait, hold on. Oh, it's this tiny little. Oh, it just. It was literally just that. Okay, now that we can visualize the data, let's get it messy. 3, 2, 1. Boom. And this is what will give to the sorting algorithm so they can clean it up. Let's start with the dumbest sorting algorithm ever. Bogosort, bro. I'm just realizing now that it sounds like a freaking Pokemon man. Anyway, Vogue Sword basically works by randomly shuffling the data and then checking if it's in order. And. And it does this until infinity, basically. So, yeah, it's like, pretty much useless, but in the best case scenario, which is literally one in factorial of 100, which is this number here. In that case, it would technically work. Let's move on to one of the classics, Bubble Sort. Bubble sort just goes through the data, compares adjacent elements and swaps them if they're in the wrong order. And it repeats this again and again and again until the data is sorted. It's honestly not the best, but. But it works. Alright, first round of the Sorting Algorithm Olympics. Bogo Sort versus Bubble Sort. Go. Okay. Bubble Sort. Smoked Bogosword. So Bubble Sort is officially the first algorithm to make it to the second round. Lets now look at one of my favorite sorting algorithms, Merge Sort. I freaking love this sorting algorithm. Just look at this. Like it looks so cool and it's super freaking smart as well. Instead of trying to sort the entire data all at once, Bubble Sort it divides the data into smaller and smaller chunks, sorts them and then merges them back together. Come on, you got to recognize that looks pretty freaking cool. Come on, just say it. Come on, just. Just say it. Anyway, here's another cool sorting algorithm. Cocktail Shaker Sort. This is kind of like Bubble Sort but it moves in both directions. To be honest, it's not that good. I just really like the name and how it looks as well. I also ended up implementing all of these other sorting algorithms. So it's time for the first round of the Sorting Algorithm Olympics. Three, two, one, Go. And it looks like we have some winners. Bucket Sword, Radek Sword, Quick Sword, Insertion Sword and Merge Sword. My dear Cocktail Shaker Sword lost in the first round against Insertion Sword. Which is fair enough. In Insertion Sort works by just inserting each element into the correct position within a smaller list until it reaches the end. Alright, quarterfinals. Let's go. Quarter final one is Insertion Sort versus Merge Sort. Oh wow. Merge Sort is actually kind of looking good, bro. Eliminated Insertion Sort like it was nothing. Just look at the times. Not gonna lie, I'm kind of rooting for Merge Sword. Okay, Quarter final two. Bucket Sword versus Bubble Sword. And as expected, Bubble Sort got absolutely destroyed. And Bucket Sort advances to the semifinal. Bucket Sort is actually pretty cool. It divides the data into buckets based on their values and then merges the values. Alright, Semi finals. Not gonna lie. I' of rooting for Merge Sword. I don't know why, I just really like it. It's just so cute. First semi final, Radic Sword versus Bucket Sword and Radix Sword wins. I was kind of expecting this cuz Radix Sword is really freaking fast. It also works with buckets, but the difference is that it classifies the value by looking at individual digits, so it's actually called a lsd. Radic Sword. Lsd, meaning of course, least significant digit, second semi final. Alright, come on. Merge Sword, let's go. Come on, come on, come on. Oh man, this. This sucks. To be fair, Quicksort is actually kind of cool as well. Even though it was invented in 1959, it's like the most used sorting algorithm right now. Like, no joke, everyone uses this. It works by selecting a pivot element and then dividing the other elements into two lists, depending on if they're greater or less than the pivot. Alright, the time has come. The final of the Sorting Algorithm Olympics. Radixort versus Quicksort. Who will win? I don't know. This is tense. Alright, without further ado, here are the finals of the Olympics. 3, 2, 1, go. Congratulations, Radik Sword, on becoming the first and probably last sorting algorithm Olympic gold medalist. Quicksort gets silver. And Mertzort was actually faster than Bucket Sword, apparently. So it gets the bronze medal. Alright, at least my baby gets the bronze medal. I'll take it. I'll take it. I also tested all the algorithms at the same time, and it turns out that maybe the tournament style might not be the most appropriate because these were the results. Radix Sword won, but apparently Commsword came in second place, which is crazy because it's. It's like not supposed to be that good. In third place came Quicksword, then Shellsword, and in fifth place, my dear Merge Sword. But forget I told you this, because no one is taking away the bronze medal from my Merge sword. No one. So now you know, anytime you're on a website and you sort by price, boom. You should thank sorting algorithms for that. Oh, wait, what? What's that? What is this? There's an already inbuilt Python function called sorted that does this better than every other algorithm I tested. Then why the did I do this video to begin with? Just kidding. I hope you found this video interesting and I actually quite like sorting algorithms. In fact, I wrote an article about them on Medium, if you want to learn more, it's in the description. I hope you enjoyed this video and I'll see you in the next one.